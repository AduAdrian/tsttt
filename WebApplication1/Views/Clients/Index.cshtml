@model WebApplication1.Models.PaginatedClientsViewModel
@{
    ViewData["Title"] = "Clienti";
    var searchModel = ViewBag.SearchModel as WebApplication1.Models.ClientSearchViewModel ?? new WebApplication1.Models.ClientSearchViewModel();
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2><i class="fas fa-users"></i> Clienti ITP</h2>
    <div class="d-flex gap-2">
        <form asp-action="SeedTestData" method="post" class="d-inline">
            @Html.AntiForgeryToken()
            <button type="submit" class="btn btn-outline-secondary" onclick="return confirm('Genereaza 100 de clienti test?')">
                <i class="fas fa-seedling"></i> Genereaza Date Test
            </button>
        </form>
        <a asp-action="Create" class="btn btn-primary">
            <i class="fas fa-plus"></i> Adauga Client Nou
        </a>
    </div>
</div>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="fas fa-check-circle"></i> @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <i class="fas fa-exclamation-triangle"></i> @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<!-- Search and Filter Section -->
<div class="card mb-4">
    <div class="card-header bg-primary text-white">
        <h5 class="mb-0">
            <i class="fas fa-search"></i> C?utare ?i Filtrare
        </h5>
    </div>
    <div class="card-body">
        <form asp-action="Index" method="get" class="row g-3">
            <div class="col-md-4">
                <label class="form-label">C?utare</label>
                <div class="input-group">
                    <input type="text" name="SearchTerm" value="@searchModel.SearchTerm" class="form-control" 
                           placeholder="Nr. înmatriculare, telefon, tip validitate...">
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-search"></i>
                    </button>
                </div>
            </div>
            <div class="col-md-2">
                <label class="form-label">Status</label>
                <select name="StatusFilter" class="form-select">
                    <option value="All" selected="@(searchModel.StatusFilter == WebApplication1.Models.ClientStatusFilter.All)">To?i</option>
                    <option value="Valid" selected="@(searchModel.StatusFilter == WebApplication1.Models.ClientStatusFilter.Valid)">Valizi</option>
                    <option value="ExpiringSoon" selected="@(searchModel.StatusFilter == WebApplication1.Models.ClientStatusFilter.ExpiringSoon)">Expir? curând</option>
                    <option value="Expired" selected="@(searchModel.StatusFilter == WebApplication1.Models.ClientStatusFilter.Expired)">Expira?i</option>
                </select>
            </div>
            <div class="col-md-2">
                <label class="form-label">Sortare</label>
                <select name="SortBy" class="form-select">
                    <option value="ExpiryDate" selected="@(searchModel.SortBy == "ExpiryDate")">Data Expirare</option>
                    <option value="RegistrationNumber" selected="@(searchModel.SortBy == "RegistrationNumber")">Nr. Înmatriculare</option>
                    <option value="ValidityType" selected="@(searchModel.SortBy == "ValidityType")">Tip Validitate</option>
                    <option value="CreatedAt" selected="@(searchModel.SortBy == "CreatedAt")">Data Creare</option>
                </select>
            </div>
            <div class="col-md-2">
                <label class="form-label">Direc?ie</label>
                <select name="SortDirection" class="form-select">
                    <option value="asc" selected="@(searchModel.SortDirection == "asc")">Cresc?tor</option>
                    <option value="desc" selected="@(searchModel.SortDirection == "desc")">Descresc?tor</option>
                </select>
            </div>
            <div class="col-md-2">
                <label class="form-label">Pe pagin?</label>
                <select name="PageSize" class="form-select" onchange="this.form.submit()">
                    <option value="10" selected="@(searchModel.PageSize == 10)">10</option>
                    <option value="50" selected="@(searchModel.PageSize == 50)">50</option>
                </select>
            </div>
            <input type="hidden" name="Page" value="1" />
        </form>
        
        @if (!string.IsNullOrWhiteSpace(Model.SearchTerm))
        {
            <div class="mt-3">
                <span class="badge bg-info">C?utare activ?: "@Model.SearchTerm"</span>
                <a asp-action="Index" class="btn btn-sm btn-outline-secondary ms-2">
                    <i class="fas fa-times"></i> ?terge filtrul
                </a>
            </div>
        }
    </div>
</div>

<!-- Excel Template and Import Section -->
<div class="card mb-4">
    <div class="card-header bg-success text-white">
        <h5 class="mb-0">
            <i class="fas fa-file-excel"></i> Template Excel Automatizat
        </h5>
    </div>
    <div class="card-body">
        <div class="row align-items-center">
            <div class="col-lg-8">
                <p class="mb-2">
                    <i class="fas fa-magic text-success"></i>
                    <strong>Sistem complet automatizat cu formule Excel integrate</strong>
                </p>
                <small class="text-muted">
                    Template-ul con?ine automatiz?ri pentru calculare date expirare, valid?ri, dropdown-uri ?i highlighting colorat. 
                    Importul ÎNLOCUIE?TE complet baza de date. Maxim 500 de clien?i per template.
                </small>
            </div>
            <div class="col-lg-4">
                <div class="d-flex flex-column gap-2">
                    <div class="btn-group" role="group">
                        <a href="@Url.Action("DownloadSmartTemplate", "Template")" class="btn btn-success">
                            <i class="fas fa-download"></i> Template Automatizat
                        </a>
                        <a href="@Url.Action("PreviewTemplate", "Template")" class="btn btn-info">
                            <i class="fas fa-eye"></i> Preview
                        </a>
                        <a href="@Url.Action("TemplateInfo", "Template")" class="btn btn-outline-info">
                            <i class="fas fa-info"></i> Info
                        </a>
                    </div>
                    <a href="@Url.Action("Import", "Template")" class="btn btn-warning btn-lg">
                        <i class="fas fa-upload"></i> Import Excel (Înlocuie?te BD)
                    </a>
                </div>
            </div>
        </div>
        <div class="row mt-3">
            <div class="col-md-12">
                <div class="alert alert-warning mb-0">
                    <i class="fas fa-exclamation-triangle"></i>
                    <strong>IMPORTANT:</strong> Template-ul automatizat înlocuie?te COMPLET baza de date existent? la import. 
                    Pentru ad?ugiri incrementale, folosi?i butonul "Adaug? Client Nou".
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Export Section -->
<div class="card mb-4">
    <div class="card-header bg-info text-white">
        <h5 class="mb-0">
            <i class="fas fa-download"></i> Export Date Existente
        </h5>
    </div>
    <div class="card-body">
        <div class="row align-items-center">
            <div class="col-lg-8">
                <p class="mb-2">
                    <i class="fas fa-file-export text-info"></i>
                    <strong>Export? clien?ii existen?i în diferite formate</strong>
                </p>
                <small class="text-muted">
                    Export? datele curente pentru backup sau procesare extern?. Nu include automatiz?rile Excel.
                </small>
            </div>
            <div class="col-lg-4">
                <div class="btn-group w-100" role="group">
                    <a asp-action="ExportExcel" class="btn btn-outline-success">
                        <i class="fas fa-file-excel"></i> Export Excel
                    </a>
                    <a asp-action="ExportCsv" class="btn btn-outline-info">
                        <i class="fas fa-file-csv"></i> Export CSV
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Statistics -->
@if (Model.TotalItems > 0)
{
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="card border-success">
                <div class="card-body text-center">
                    <h4 class="text-success">@Model.ValidCount</h4>
                    <small class="text-muted">Valizi</small>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card border-warning">
                <div class="card-body text-center">
                    <h4 class="text-warning">@Model.ExpiringSoonCount</h4>
                    <small class="text-muted">Expir? curând</small>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card border-danger">
                <div class="card-body text-center">
                    <h4 class="text-danger">@Model.ExpiredCount</h4>
                    <small class="text-muted">Expira?i</small>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card border-info">
                <div class="card-body text-center">
                    <h4 class="text-info">@Model.TotalItems</h4>
                    <small class="text-muted">Total</small>
                </div>
            </div>
        </div>
    </div>
}

<!-- Clients List Card -->
<div class="card">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h5 class="mb-0">
            <i class="fas fa-list"></i> Lista Clienti
            @if (Model.TotalItems > 0)
            {
                <span class="badge bg-info ms-2">
                    Afi?ez @Model.StartItem - @Model.EndItem din @Model.TotalItems
                </span>
            }
        </h5>
        
        @if (Model.TotalPages > 1)
        {
            <div class="d-flex align-items-center">
                <span class="me-2 small text-muted">Pagina @Model.CurrentPage din @Model.TotalPages</span>
            </div>
        }
    </div>
    <div class="card-body">
        @if (Model.Clients.Any())
        {
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>
                                <a href="@GetSortUrl("RegistrationNumber")" class="text-decoration-none">
                                    <i class="fas fa-car"></i> Nr. Înmatriculare
                                    @if (searchModel.SortBy == "RegistrationNumber")
                                    {
                                        <i class="fas fa-sort-@(searchModel.SortDirection == "asc" ? "up" : "down")"></i>
                                    }
                                </a>
                            </th>
                            <th>
                                <i class="fas fa-phone"></i> Telefon
                            </th>
                            <th>
                                <a href="@GetSortUrl("ValidityType")" class="text-decoration-none">
                                    <i class="fas fa-calendar-alt"></i> Tip Valabilitate
                                    @if (searchModel.SortBy == "ValidityType")
                                    {
                                        <i class="fas fa-sort-@(searchModel.SortDirection == "asc" ? "up" : "down")"></i>
                                    }
                                </a>
                            </th>
                            <th>
                                <a href="@GetSortUrl("ExpiryDate")" class="text-decoration-none">
                                    <i class="fas fa-calendar-check"></i> Data Expirare ITP
                                    @if (searchModel.SortBy == "ExpiryDate" || string.IsNullOrEmpty(searchModel.SortBy))
                                    {
                                        <i class="fas fa-sort-@(searchModel.SortDirection == "asc" ? "up" : "down")"></i>
                                    }
                                </a>
                            </th>
                            <th>
                                <i class="fas fa-hourglass-half"></i> Zile R?mase
                            </th>
                            <th>
                                <i class="fas fa-info-circle"></i> Status
                            </th>
                            <th class="text-center">
                                <i class="fas fa-cogs"></i> Ac?iuni
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var client in Model.Clients)
                        {
                            <tr class="@(client.IsExpired ? "table-danger" : client.IsExpiringSoon ? "table-warning" : "")">
                                <td>
                                    <strong>@client.RegistrationNumber</strong>
                                </td>
                                <td>
                                    @if (!string.IsNullOrEmpty(client.PhoneNumber))
                                    {
                                        <span class="text-primary">
                                            <i class="fas fa-phone fa-sm"></i> @client.PhoneNumber
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">
                                            <i class="fas fa-phone-slash fa-sm"></i> F?r? telefon
                                        </span>
                                    }
                                </td>
                                <td>
                                    @client.ValidityType.GetDisplayName()
                                </td>
                                <td>
                                    @client.ExpiryDate.ToString("dd/MM/yyyy")
                                    <br><small class="text-muted">@client.ExpiryDate.ToString("dddd", new System.Globalization.CultureInfo("ro-RO"))</small>
                                </td>
                                <td>
                                    @if (client.DaysUntilExpiry < 0)
                                    {
                                        <span class="text-danger">
                                            <i class="fas fa-exclamation-triangle"></i>
                                            @Math.Abs(client.DaysUntilExpiry) zile întârziere
                                        </span>
                                    }
                                    else if (client.DaysUntilExpiry == 0)
                                    {
                                        <span class="text-warning">
                                            <i class="fas fa-clock"></i>
                                            Expir? azi
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="@(client.IsExpiringSoon ? "text-warning" : "text-success")">
                                            <i class="fas fa-calendar"></i>
                                            @client.DaysUntilExpiry zile
                                        </span>
                                    }
                                </td>
                                <td>
                                    <span class="@client.StatusBadgeClass">
                                        @client.StatusText
                                    </span>
                                </td>
                                <td class="text-center">
                                    <div class="btn-group" role="group">
                                        <a asp-action="Details" asp-route-id="@client.Id" 
                                           class="btn btn-outline-info btn-sm" title="Detalii">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <a asp-action="Edit" asp-route-id="@client.Id" 
                                           class="btn btn-outline-primary btn-sm" title="Editeaz?">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <button type="button" class="btn btn-outline-danger btn-sm" 
                                                onclick="confirmDelete(@client.Id, '@client.RegistrationNumber')" title="Dezactiveaz?">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            @if (Model.TotalPages > 1)
            {
                <nav aria-label="Paginare clien?i" class="mt-4">
                    <ul class="pagination justify-content-center">
                        <!-- Previous Page -->
                        <li class="page-item @(!Model.HasPreviousPage ? "disabled" : "")">
                            <a class="page-link" href="@GetPageUrl(Model.CurrentPage - 1)"
                               tabindex="@(!Model.HasPreviousPage ? "-1" : "0")">
                                <i class="fas fa-chevron-left"></i> Anterior
                            </a>
                        </li>

                        <!-- First page -->
                        @if (Model.CurrentPage > 3)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@GetPageUrl(1)">1</a>
                            </li>
                            @if (Model.CurrentPage > 4)
                            {
                                <li class="page-item disabled">
                                    <span class="page-link">...</span>
                                </li>
                            }
                        }

                        <!-- Page numbers -->
                        @foreach (var pageNum in Model.GetPageNumbers())
                        {
                            <li class="page-item @(pageNum == Model.CurrentPage ? "active" : "")">
                                <a class="page-link" href="@GetPageUrl(pageNum)">@pageNum</a>
                            </li>
                        }

                        <!-- Last page -->
                        @if (Model.CurrentPage < Model.TotalPages - 2)
                        {
                            @if (Model.CurrentPage < Model.TotalPages - 3)
                            {
                                <li class="page-item disabled">
                                    <span class="page-link">...</span>
                                </li>
                            }
                            <li class="page-item">
                                <a class="page-link" href="@GetPageUrl(Model.TotalPages)">@Model.TotalPages</a>
                            </li>
                        }

                        <!-- Next Page -->
                        <li class="page-item @(!Model.HasNextPage ? "disabled" : "")">
                            <a class="page-link" href="@GetPageUrl(Model.CurrentPage + 1)"
                               tabindex="@(!Model.HasNextPage ? "-1" : "0")">
                                Urm?torul <i class="fas fa-chevron-right"></i>
                            </a>
                        </li>
                    </ul>
                    
                    <!-- Page size selector -->
                    <div class="d-flex justify-content-center mt-3">
                        <div class="btn-group" role="group">
                            <a href="@GetPageSizeUrl(10)" class="btn @(searchModel.PageSize == 10 ? "btn-primary" : "btn-outline-primary") btn-sm">
                                10 pe pagin?
                            </a>
                            <a href="@GetPageSizeUrl(50)" class="btn @(searchModel.PageSize == 50 ? "btn-primary" : "btn-outline-primary") btn-sm">
                                50 pe pagin?
                            </a>
                        </div>
                    </div>
                </nav>
            }
        }
        else
        {
            <div class="text-center py-5">
                @if (!string.IsNullOrWhiteSpace(Model.SearchTerm))
                {
                    <i class="fas fa-search fa-3x text-muted mb-3"></i>
                    <h5 class="text-muted">Nu s-au g?sit clien?i pentru c?utarea "@Model.SearchTerm"</h5>
                    <p class="text-muted">Încerca?i s? modifica?i termenul de c?utare sau s? ?terge?i filtrul.</p>
                    <a asp-action="Index" class="btn btn-primary">
                        <i class="fas fa-times"></i> ?terge filtrul
                    </a>
                }
                else
                {
                    <i class="fas fa-users fa-3x text-muted mb-3"></i>
                    <h5 class="text-muted">Nu exist? clien?i înregistra?i</h5>
                    <p class="text-muted">Adaug? primul client sau import? din Excel pentru a începe.</p>
                    <div class="d-flex justify-content-center gap-2">
                        <a asp-action="Create" class="btn btn-primary">
                            <i class="fas fa-plus"></i> Adaug? Client Nou
                        </a>
                        <a asp-action="DownloadTemplate" class="btn btn-success">
                            <i class="fas fa-download"></i> Template Excel
                        </a>
                        <form asp-action="SeedTestData" method="post" class="d-inline">
                            @Html.AntiForgeryToken()
                            <button type="submit" class="btn btn-outline-secondary" onclick="return confirm('Genereaz? 100 de clien?i test?')">
                                <i class="fas fa-seedling"></i> Genereaz? Date Test
                            </button>
                        </form>
                    </div>
                }
            </div>
        }
    </div>
</div>

<!-- Excel Import Modal -->
<div class="modal fade" id="importModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-warning text-dark">
                <h5 class="modal-title">
                    <i class="fas fa-upload"></i> Import Clien?i din Excel (Dep??it)
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="alert alert-warning">
                    <h6><i class="fas fa-exclamation-triangle"></i> Import Dep??it</h6>
                    <p class="mb-2">
                        Acest import este dep??it. Pentru o experien?? îmbun?t??it? ?i automatiz?ri complete, 
                        folosi?i noul <strong>Template Excel Automatizat</strong>.
                    </p>
                    <div class="d-flex gap-2">
                        <a href="@Url.Action("Import", "Template")" class="btn btn-success">
                            <i class="fas fa-magic"></i> Folose?te Template Automatizat
                        </a>
                        <a href="@Url.Action("PreviewTemplate", "Template")" class="btn btn-info">
                            <i class="fas fa-eye"></i> Vezi Preview
                        </a>
                    </div>
                </div>
                
                <form asp-action="ImportExcel" method="post" enctype="multipart/form-data" id="importForm">
                    @Html.AntiForgeryToken()
                    
                    <div class="alert alert-info">
                        <h6><i class="fas fa-info-circle"></i> Instruc?iuni Import Basic:</h6>
                        <ul class="mb-0">
                            <li>Desc?rca?i template-ul basic pentru formatarea corect?</li>
                            <li>Completa?i datele conform exemplului din template</li>
                            <li>Fi?ierul trebuie s? fie în format <strong>.xlsx</strong></li>
                            <li>Maxim <strong>1000 de înregistr?ri</strong> per import</li>
                            <li>M?rimea maxim?: <strong>5MB</strong></li>
                            <li><strong>Nu are automatiz?ri</strong> - trebuie s? calcula?i datele manual</li>
                        </ul>
                    </div>
                    
                    <div class="mb-3">
                        <label for="importFile" class="form-label">
                            <i class="fas fa-file-excel text-success"></i> Selecteaz? fi?ierul Excel (.xlsx)
                        </label>
                        <input type="file" class="form-control" id="importFile" name="file" accept=".xlsx" required>
                        <div class="form-text">
                            Doar fi?iere .xlsx sunt acceptate. M?rime maxim?: 5MB
                        </div>
                    </div>
                    
                    <div class="row">
                        <div class="col-md-6">
                            <div class="card border-success">
                                <div class="card-header bg-success text-white">
                                    <h6 class="mb-0"><i class="fas fa-check"></i> Valid?ri Automate</h6>
                                </div>
                                <div class="card-body">
                                    <ul class="mb-0 small">
                                        <li>Format num?r înmatriculare</li>
                                        <li>Format num?r telefon</li>
                                        <li>Data expirare valid?</li>
                                        <li>Duplicatele sunt ignorate</li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="card border-danger">
                                <div class="card-header bg-danger text-white">
                                    <h6 class="mb-0"><i class="fas fa-exclamation-triangle"></i> Limit?ri</h6>
                                </div>
                                <div class="card-body">
                                    <ul class="mb-0 small">
                                        <li>F?r? automatiz?ri Excel</li>
                                        <li>F?r? calculare automat? date</li>
                                        <li>F?r? valid?ri avansate</li>
                                        <li>Import incremental doar</li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times"></i> Anuleaz?
                </button>
                <a href="@Url.Action("Import", "Template")" class="btn btn-success">
                    <i class="fas fa-magic"></i> Folose?te Template Nou
                </a>
                <a asp-action="DownloadTemplate" class="btn btn-warning">
                    <i class="fas fa-download"></i> Template Basic
                </a>
                <button type="button" class="btn btn-outline-danger" onclick="submitImport()">
                    <i class="fas fa-upload"></i> Import Basic
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="fas fa-exclamation-triangle text-warning"></i>
                    Confirmare Dezactivare
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>E?ti sigur c? vrei s? dezactivezi clientul <strong id="clientName"></strong>?</p>
                <p><small class="text-muted">Clientul va fi dezactivat dar nu va fi ?ters permanent.</small></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Anuleaz?</button>
                <form id="deleteForm" method="post" style="display: inline;">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">
                        <i class="fas fa-trash"></i> Dezactiveaz?
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@functions {
    private string GetPageUrl(int page)
    {
        var searchModel = ViewBag.SearchModel as WebApplication1.Models.ClientSearchViewModel ?? new WebApplication1.Models.ClientSearchViewModel();
        var values = new RouteValueDictionary
        {
            ["page"] = page,
            ["pageSize"] = searchModel.PageSize,
            ["searchTerm"] = Model.SearchTerm,
            ["sortBy"] = Model.SortBy,
            ["sortDirection"] = Model.SortDirection,
            ["statusFilter"] = searchModel.StatusFilter
        };
        return Url.Action("Index", values);
    }

    private string GetPageSizeUrl(int pageSize)
    {
        var searchModel = ViewBag.SearchModel as WebApplication1.Models.ClientSearchViewModel ?? new WebApplication1.Models.ClientSearchViewModel();
        var values = new RouteValueDictionary
        {
            ["page"] = 1,
            ["pageSize"] = pageSize,
            ["searchTerm"] = Model.SearchTerm,
            ["sortBy"] = Model.SortBy,
            ["sortDirection"] = Model.SortDirection,
            ["statusFilter"] = searchModel.StatusFilter
        };
        return Url.Action("Index", values);
    }

    private string GetSortUrl(string sortBy)
    {
        var searchModel = ViewBag.SearchModel as WebApplication1.Models.ClientSearchViewModel ?? new WebApplication1.Models.ClientSearchViewModel();
        var currentSort = Model.SortBy ?? "ExpiryDate";
        var currentDirection = Model.SortDirection ?? "asc";
        var newDirection = (currentSort == sortBy && currentDirection == "asc") ? "desc" : "asc";

        var values = new RouteValueDictionary
        {
            ["page"] = 1,
            ["pageSize"] = searchModel.PageSize,
            ["searchTerm"] = Model.SearchTerm,
            ["sortBy"] = sortBy,
            ["sortDirection"] = newDirection,
            ["statusFilter"] = searchModel.StatusFilter
        };
        return Url.Action("Index", values);
    }
}

@section Scripts {
    <script>
        // Enhanced client management with retry logic
        function confirmDelete(id, registrationNumber) {
            deleteClientSafely(id, registrationNumber);
        }
        
        function submitImport() {
            const fileInput = document.getElementById('importFile');
            const file = fileInput.files[0];
            
            if (!file) {
                window.CommandExecutor?.showErrorMessage('V? rug?m s? selecta?i un fi?ier Excel.');
                return;
            }
            
            if (!file.name.toLowerCase().endsWith('.xlsx')) {
                window.CommandExecutor?.showErrorMessage('Fi?ierul trebuie s? fie în format .xlsx');
                return;
            }
            
            if (file.size > 5 * 1024 * 1024) {
                window.CommandExecutor?.showErrorMessage('Fi?ierul este prea mare. M?rimea maxim? permis?: 5MB');
                return;
            }
            
            // Use enhanced import with retry
            importExcelSafely(file);
        }

        // Enhanced search with retry
        function performSearch() {
            const form = document.querySelector('form[action*="Index"]');
            const formData = new FormData(form);
            
            const filters = {
                page: formData.get('Page') || 1,
                pageSize: formData.get('PageSize') || 10,
                sortBy: formData.get('SortBy') || 'ExpiryDate',
                sortDirection: formData.get('SortDirection') || 'asc',
                statusFilter: formData.get('StatusFilter') || 'All'
            };
            
            const searchTerm = formData.get('SearchTerm') || '';
            
            searchClientsSafely(searchTerm, filters);
        }

        // Enhanced data seeding with retry
        function seedTestData() {
            if (confirm('Genereaz? 100 de clien?i test?')) {
                seedTestDataWithRetry();
            }
        }

        // Auto-retry search on form submission
        document.addEventListener('DOMContentLoaded', function() {
            const searchForm = document.querySelector('form[action*="Index"]');
            if (searchForm) {
                searchForm.addEventListener('submit', function(e) {
                    e.preventDefault();
                    performSearch();
                });
            }

            // Auto-retry on page size change
            const pageSizeSelect = document.querySelector('select[name="PageSize"]');
            if (pageSizeSelect) {
                pageSizeSelect.addEventListener('change', function() {
                    performSearch();
                });
            }

            // Enhanced seed button
            const seedButton = document.querySelector('button[onclick*="SeedTestData"]');
            if (seedButton) {
                seedButton.onclick = function(e) {
                    e.preventDefault();
                    seedTestData();
                };
            }
        });
        
        // File input validation with retry
        document.getElementById('importFile')?.addEventListener('change', function() {
            const file = this.files[0];
            if (file) {
                if (!file.name.toLowerCase().endsWith('.xlsx')) {
                    this.value = '';
                    window.CommandExecutor?.showErrorMessage('Doar fi?iere .xlsx sunt acceptate.');
                    return;
                }
                
                if (file.size > 5 * 1024 * 1024) {
                    this.value = '';
                    window.CommandExecutor?.showErrorMessage('Fi?ierul este prea mare. M?rimea maxim?: 5MB');
                    return;
                }
                
                // Show file info
                const sizeInMB = (file.size / (1024 * 1024)).toFixed(2);
                console.log(`? Fi?ier selectat: ${file.name} (${sizeInMB}MB)`);
                window.CommandExecutor?.showSuccessMessage(`Fi?ier selectat: ${file.name} (${sizeInMB}MB)`);
            }
        });

        // Enhanced pagination with retry
        document.querySelectorAll('a[href*="Clients"]').forEach(link => {
            link.addEventListener('click', function(e) {
                e.preventDefault();
                navigateSafely(this.href);
            });
        });

        // Enhanced sorting with retry
        document.querySelectorAll('a[href*="sortBy"]').forEach(link => {
            link.addEventListener('click', function(e) {
                e.preventDefault();
                const url = new URL(this.href);
                const params = url.searchParams;
                
                const filters = {
                    page: 1,
                    pageSize: params.get('pageSize') || 10,
                    sortBy: params.get('sortBy'),
                    sortDirection: params.get('sortDirection'),
                    statusFilter: params.get('statusFilter') || 'All'
                };
                
                const searchTerm = params.get('searchTerm') || '';
                searchClientsSafely(searchTerm, filters);
            });
        });

        // Auto-refresh data every 5 minutes if there are notifications
        let autoRefreshInterval;
        
        function startAutoRefresh() {
            // Only auto-refresh if there are expired or expiring clients
            const hasUrgentClients = document.querySelector('.table-danger, .table-warning');
            
            if (hasUrgentClients) {
                autoRefreshInterval = setInterval(() => {
                    console.log('?? Auto-refresh: Actualizare date clien?i...');
                    // Implementa?i aici logica de reînc?rcare automat?, de exemplu:
                    // window.location.reload();
                }, 5 * 60 * 1000); // 5 minute
            }
        }
        
        startAutoRefresh();
    </script>
}