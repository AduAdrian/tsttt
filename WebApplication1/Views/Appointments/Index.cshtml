@model AppointmentListViewModel
@{
    ViewData["Title"] = "Program?ri";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2">@ViewData["Title"]</h1>
    <div class="btn-toolbar mb-2 mb-md-0">
        <div class="btn-group me-2">
            <a asp-action="Calendar" class="btn btn-sm btn-outline-secondary">
                <i class="fas fa-calendar-alt"></i> Calendar
            </a>
            <a asp-action="Create" class="btn btn-sm btn-primary">
                <i class="fas fa-plus"></i> Programare nou?
            </a>
        </div>
    </div>
</div>

<!-- Statistics Cards -->
<div class="row mb-4">
    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-primary shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                            Total Program?ri</div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.TotalAppointments</div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-calendar-check fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-success shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                            Ast?zi</div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.TodayAppointments</div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-calendar-day fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-info shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-info text-uppercase mb-1">Viitoare</div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.UpcomingAppointments</div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-clock fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-warning shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">
                            Finalizate</div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.CompletedAppointments</div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-check-circle fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Filters -->
<div class="card mb-4">
    <div class="card-header">
        <i class="fas fa-filter me-1"></i>
        Filtrare program?ri
    </div>
    <div class="card-body">
        <form asp-action="Index" method="get" class="row g-3">
            <div class="col-md-3">
                <label for="filterDate" class="form-label">Data</label>
                <input type="date" class="form-control" id="filterDate" name="filterDate" value="@(Model.FilterDate?.ToString("yyyy-MM-dd"))">
            </div>
            <div class="col-md-3">
                <label for="filterStatus" class="form-label">Status</label>
                <select class="form-select" id="filterStatus" name="filterStatus">
                    <option value="">Toate statusurile</option>
                    @foreach (AppointmentStatus status in Enum.GetValues<AppointmentStatus>())
                    {
                        <option value="@status" selected="@(Model.FilterStatus == status)">
                            @status.GetDisplayName()
                        </option>
                    }
                </select>
            </div>
            <div class="col-md-3">
                <label for="filterClient" class="form-label">Client</label>
                <input type="text" class="form-control" id="filterClient" name="filterClient" value="@Model.FilterClient" placeholder="Nume client...">
            </div>
            <div class="col-md-3 d-flex align-items-end">
                <button type="submit" class="btn btn-primary me-2">
                    <i class="fas fa-search"></i> Filtreaz?
                </button>
                <a asp-action="Index" class="btn btn-secondary">
                    <i class="fas fa-undo"></i> Reset
                </a>
            </div>
        </form>
    </div>
</div>

<!-- Appointments List -->
<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Lista program?rilor</h6>
    </div>
    <div class="card-body">
        @if (Model.Appointments.Any())
        {
            <div class="table-responsive">
                <table class="table table-bordered" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>Data ?i ora</th>
                            <th>Titlu</th>
                            <th>Client</th>
                            <th>Durat?</th>
                            <th>Status</th>
                            <th>Ac?iuni</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var appointment in Model.Appointments)
                        {
                            <tr class="@(appointment.IsToday ? "table-warning" : "")">
                                <td>
                                    <div class="fw-bold">@appointment.AppointmentDate.ToString("dd.MM.yyyy")</div>
                                    <small class="text-muted">@appointment.AppointmentDate.ToString("HH:mm") - @appointment.EndTime.ToString("HH:mm")</small>
                                </td>
                                <td>
                                    <div class="fw-bold">@appointment.Title</div>
                                    @if (!string.IsNullOrEmpty(appointment.Description))
                                    {
                                        <small class="text-muted">@appointment.Description</small>
                                    }
                                </td>
                                <td>
                                    <div class="fw-bold">@appointment.ClientName</div>
                                    @if (!string.IsNullOrEmpty(appointment.ClientPhone))
                                    {
                                        <small class="text-muted d-block">?? @appointment.ClientPhone</small>
                                    }
                                    @if (!string.IsNullOrEmpty(appointment.ClientEmail))
                                    {
                                        <small class="text-muted d-block">?? @appointment.ClientEmail</small>
                                    }
                                </td>
                                <td>@appointment.DurationMinutes min</td>
                                <td>
                                    <span class="badge @GetStatusBadgeClass(appointment.Status)">
                                        @appointment.Status.GetDisplayName()
                                    </span>
                                </td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <a asp-action="Details" asp-route-id="@appointment.Id" class="btn btn-sm btn-info" title="Detalii">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <a asp-action="Edit" asp-route-id="@appointment.Id" class="btn btn-sm btn-warning" title="Editeaz?">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <button type="button" class="btn btn-sm btn-danger" onclick="deleteAppointment(@appointment.Id)" title="?terge">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="text-center py-5">
                <i class="fas fa-calendar-times fa-3x text-muted mb-3"></i>
                <h5>Nu exist? program?ri</h5>
                <p class="text-muted">Nu au fost g?site program?ri cu criteriile selectate.</p>
                <a asp-action="Create" class="btn btn-primary">
                    <i class="fas fa-plus"></i> Creeaz? prima programare
                </a>
            </div>
        }
    </div>
</div>

@functions {
    private string GetStatusBadgeClass(AppointmentStatus status)
    {
        return status switch
        {
            AppointmentStatus.Scheduled => "bg-secondary",
            AppointmentStatus.Confirmed => "bg-primary",
            AppointmentStatus.InProgress => "bg-info",
            AppointmentStatus.Completed => "bg-success",
            AppointmentStatus.Cancelled => "bg-danger",
            AppointmentStatus.Rescheduled => "bg-warning",
            _ => "bg-secondary"
        };
    }
}

@section Scripts {
    <script>
        function deleteAppointment(id) {
            if (confirm('E?ti sigur c? vrei s? ?tergi aceast? programare?')) {
                fetch(`/Appointments/Delete/${id}`, {
                    method: 'POST',
                    headers: {
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value,
                        'Content-Type': 'application/json'
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        location.reload();
                    } else {
                        alert('Eroare: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('A ap?rut o eroare la ?tergerea program?rii.');
                });
            }
        }
    </script>
}